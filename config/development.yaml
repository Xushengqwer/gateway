# 正确的结构示例 (config.development.yaml)
server:
  listen_addr: ":8080"
  port: "8080" # 如果需要的话
  requestTimeout: 10s # 确保存在并使用时间单位
zapConfig: # 对应 cfg.Logger (类型是 core.ZapConfig)
  level: "debug" # 或者 "debug"
  encoding: "json" # 或者 "console"
tracerConfig: # 对应 cfg.Tracing
  enabled: false
  exporter_type: "otlp_grpc"
  exporter_endpoint: "otel-collector:4317" # 本地测试可能用 localhost:4317
  sampler_type: "parent_based_traceid_ratio"
  sampler_param: 0.1
jwtConfig: # 对应 cfg.JWTConfig
  secret_key: "your-access-secret"
  refresh_secret: "your-refresh-secret"
  issuer: "user_hub_service"
  # expiresIn: 3600 # 如果需要
rateLimitConfig: # 对应 cfg.RateLimitConfig
  capacity: 100
  refill_interval: 1s
  cleanup_interval: 5m
  idle_timeout: 10m
services:
  - name: "user-hub-service"
    prefix: "/api/v1/user-hub" # 网关层面的服务前缀 (与 Swagger 基础路径匹配)
    host: "localhost"           # 来自 Swagger host
    port: 8081                  # 来自 Swagger host
    scheme: "http"              # 来自 Swagger schemes
    publicPaths: # 这些路径不需要认证 (路径相对于服务前缀 prefix)
      - "/account/login"        # POST
      - "/account/register"     # POST
      - "/auth/send-captcha"    # POST
      - "/phone/login"          # POST
      - "/wechat/login"         # POST
      - "/auth/refresh-token"   # POST
    routes: # 需要认证和特定权限的路径 (路径相对于服务前缀 prefix)
      # 认证管理 (Auth Management)
      - path: "/auth/logout"
        methods: ["POST"]
        allowedRoles: [1, 0] # 用户和管理员都可以登出
        description: "退出登录"

      # 身份管理 (Identity Management)
      - path: "/identities"
        methods: ["POST"]
        allowedRoles: [1, 0] # 用户或管理员创建
        description: "创建新身份"
      - path: "/identities/:identityID"
        methods: ["PUT", "DELETE"]
        allowedRoles: [1, 0] # 用户或管理员修改/删除
        description: "更新或删除身份信息"
      - path: "/users/:userID/identities"
        methods: ["GET"]
        allowedRoles: [1, 0] # 用户查看自己的，管理员查看任何人的
        description: "获取用户的所有身份信息"
      - path: "/users/:userID/identity-types"
        methods: ["GET"]
        allowedRoles: [1, 0] # 用户查看自己的，管理员查看任何人的
        description: "获取用户的所有身份类型"

      # 资料管理 (Profile Management - "我的" 资料)
      - path: "/profile" # 对应 GET /api/v1/user-hub/profile 和 PUT /api/v1/user-hub/profile
        methods: ["GET", "PUT"]
        allowedRoles: [1, 0] # 用户/管理员获取/更新自己的资料
        description: "获取或更新我的账户详情和资料"
      - path: "/profile/avatar" # 对应 POST /api/v1/user-hub/profile/avatar
        methods: ["POST"]
        allowedRoles: [1, 0] # 用户/管理员上传自己的头像
        description: "上传我的头像"

      # 用户管理 (User Management - 通常为管理员)
      - path: "/users" # 对应 POST /api/v1/user-hub/users
        methods: ["POST"]
        allowedRoles: [0] # 仅管理员可创建用户
        description: "创建新用户 (管理员)"
      - path: "/users/:userID" # 对应 GET /api/v1/user-hub/users/{userID}
        methods: ["GET"]
        allowedRoles: [1, 0] # 用户获取自己的信息，管理员获取任何用户信息
        description: "获取用户信息"
      - path: "/users/:userID" # 对应 PUT /api/v1/user-hub/users/{userID}
        methods: ["PUT"]
        allowedRoles: [0] # 仅管理员可更新用户信息
        description: "更新用户信息 (管理员)"
      - path: "/users/:userID" # 对应 DELETE /api/v1/user-hub/users/{userID}
        methods: ["DELETE"]
        allowedRoles: [0] # 仅管理员可删除用户
        description: "删除用户 (管理员)"
      - path: "/users/:userID/blacklist" # 对应 PUT /api/v1/user-hub/users/{userID}/blacklist
        methods: ["PUT"]
        allowedRoles: [0] # 仅管理员可拉黑用户
        description: "拉黑用户 (管理员)"
      - path: "/users/:userID/profile" # 对应 GET /api/v1/user-hub/users/{userID}/profile
        methods: ["GET"]
        allowedRoles: [0] # 仅管理员可获取指定用户资料
        description: "获取指定用户资料 (管理员)"

      # 用户查询 (User Query - 管理员)
      - path: "/users/query" # 对应 POST /api/v1/user-hub/users/query
        methods: ["POST"]
        allowedRoles: [0] # 仅管理员可查询用户列表
        description: "分页查询用户及其资料 (管理员)"


  # --- post-service ---
  - name: "post-service"
    prefix: "/api/v1/post"      # 网关为 post-service 配置的前缀
    host: "localhost"
    port: 8082
    scheme: "http"
    publicPaths: # 公开路径 (相对于网关 prefix)
      # 热门帖子列表 (不带参数)
      - "/hot-posts"            # 对应服务内部的 GET /api/v1/post/hot-posts
      # 公开的帖子列表 (不带参数)
      - "/posts/timeline"       # 对应服务内部的 GET /api/v1/post/posts/timeline
      - "/posts/by-author"      # 对应服务内部的 GET /api/v1/post/posts/by-author

    routes: # 需要认证和/或特定权限的路径 (相对于网关 prefix)
      # --- 管理员接口 ---
      # Swagger 路径: /admin/posts/{post_id} (DELETE)
      # 网关路径: /api/v1/post/admin/posts/:post_id
      - path: "/admin/posts/:post_id" # 注意这里的参数名是 :post_id
        methods: ["DELETE"]
        allowedRoles: [0] # 仅管理员
        description: "管理员删除指定ID的帖子"

      # Swagger 路径: /api/v1/post/admin/posts (GET)
      # 网关路径: /api/v1/post/admin/posts
      - path: "/admin/posts" # 这个路径与上面带参数的不同
        methods: ["GET"]
        allowedRoles: [0] # 仅管理员
        description: "按条件列出帖子 (管理员)"

      # Swagger 路径: /api/v1/post/admin/posts/audit (POST)
      # 网关路径: /api/v1/post/admin/posts/audit
      - path: "/admin/posts/audit"
        methods: ["POST"]
        allowedRoles: [0] # 仅管理员
        description: "审核帖子"

      # Swagger 路径: /api/v1/post/admin/posts/{id}/official-tag (PUT)
      # 网关路径: /api/v1/post/admin/posts/:id/official-tag
      - path: "/admin/posts/:id/official-tag" # 注意这里的参数名是 :id
        methods: ["PUT"]
        allowedRoles: [0] # 仅管理员
        description: "更新帖子官方标签 (管理员)"

      # --- 帖子核心操作 ---
      # Swagger 路径: /api/v1/post/posts (POST)
      # 网关路径: /api/v1/post/posts
      - path: "/posts" # 创建帖子
        methods: ["POST"]
        allowedRoles: [1, 0] # 仅普通用户可创建
        description: "创建新帖子"

      # Swagger 路径: /api/v1/post/posts/mine (GET)
      # 网关路径: /api/v1/post/posts/mine
      - path: "/posts/mine" # 获取我的帖子
        methods: ["GET"]
        allowedRoles: [1, 0] # 用户和管理员
        description: "获取我的帖子列表"

      # --- 获取帖子详情 ---
      - path: "/posts/:post_id" # 或者 /posts/:id
        methods: ["GET"]
        allowedRoles: [1, 0]
        description: "获取指定ID的帖子详情 (需要认证)"

      # 获取热门帖子详情 (需要认证)
      - path: "/hot-posts/:post_id"
        methods: ["GET"]
        allowedRoles: [1, 0] # 允许普通用户(1)和管理员(0)访问
        description: "获取指定ID的热门帖子详情 (需要认证)"

      # Swagger 路径: /api/v1/post/posts/{id} (DELETE)
      # 网关路径: /api/v1/post/posts/:id
      - path: "/posts/:id" # 删除帖子 (注意这里的参数名是 :id)
        methods: ["DELETE"]
        allowedRoles: [1, 0] # 用户(删自己的)和管理员
        description: "删除指定ID的帖子"

      # 注意: GET /api/v1/post/posts/:post_id 已经在 publicPaths 中定义为公开
      # 如果某些特定帖子的GET也需要特殊权限，需要从 publicPaths 移除并在此处定义


  # --- post-search-service (根据最新 Swagger 更新) ---
  - name: "post-search-service"
    prefix: "/api/v1/search"     # 来自 swagger.json
    host: "localhost"           # 来自 swagger.json
    port: 8083                  # 来自 swagger.json
    scheme: "http"              # 来自 swagger.json
    publicPaths: # (基于 swagger.json 推断)
      - "/_health"              # GET /api/v1/search/_health (健康检查通常是公开的)
      - "/search"               # GET /api/v1/search/search (搜索）
      - "/hot-terms"            # GET /api/v1/search/hot-terms (搜索热词)
    routes: []                  # 当前 Swagger 无需认证/权限的路由
cors: # 对应 cfg.Cors
  allow_origins:
    - "http://localhost:8000"
    - "http://localhost:3001"
    - "http://127.0.0.1:8000"
  allow_methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
  allow_headers: ["Origin", "Content-Type", "Authorization", "X-Requested-With", "X-Platform", "X-User-ID"]
  allow_credentials: true
  max_age: 43200